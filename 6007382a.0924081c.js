(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{149:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return O})),a.d(t,"default",(function(){return j}));var r=a(1),n=a(9),b=(a(0),a(192)),c=(a(194),{id:"formula-list",title:"List of Formulas and Functions"}),l={id:"faq/formula-list",title:"List of Formulas and Functions",description:'import useBaseUrl from "@docusaurus/useBaseUrl"; // Add to the top of the file below the front matter.',source:"@site/docs/faq/formula-list.mdx",permalink:"/valqsaurus/docs/faq/formula-list",sidebar:"sideBar",previous:{title:"Storage and Collaboration",permalink:"/valqsaurus/docs/storage/storage-collaboration"},next:{title:"Definitions",permalink:"/valqsaurus/docs/faq/definitions"}},O=[{value:"Logical Functions",id:"logical-functions",children:[]},{value:"Math Functions",id:"math-functions",children:[]},{value:"Finance Functions",id:"finance-functions",children:[]},{value:"Range Functions",id:"range-functions",children:[]},{value:"Static Identifiers And Other Formats",id:"static-identifiers-and-other-formats",children:[]}],i={rightToc:O};function j(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(b.b)("wrapper",Object(r.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,"ValQ supports many traditional user-friendly functions that allows you\nto create complex models. You may recognize many of these from your\nexperience with Microsoft Excel."),Object(b.b)("h2",{id:"logical-functions"},"Logical Functions"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"NAME")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"SYNTAX")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"DESCRIPTION")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/if"}),"IF")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"If( logical_test, value_if_true, value_if_false )"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Checks whether a condition is met, and returns one value if TRUE, and another value if FALSE")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/switch"}),"SWITCH")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"SWITCH ( expression, value1, result1, value2, result2, ... value_n, result_n ","[, default]"," )"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Evaluates an expression against a list of values and returns the result corresponding to the first matching value. If there is no match, an optional default value is returned.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/and"}),"AND")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"AND( logical_test1, ","[logical_test2]",", ... )"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Checks whether all the arguments are TRUE, and returns TRUE if all arguments are TRUE")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/or"}),"OR")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"OR( logical_test1, ","[logical_test2]",", ... )"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Checks whether any of the arguments are TRUE, and returns TRUE or FALSE. Returns FALSE only if all arguments are FALSE")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/not"}),"NOT")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"NOT( logical_test )"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Changes FALSE to TRUE, or TRUE to FALSE")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/xor"}),"XOR")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"XOR( logical_test1, ","[logical_test2]",", ... )"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns a logical 'Exclusive Or' of all arguments")))),Object(b.b)("h2",{id:"math-functions"},"Math Functions"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"NAME")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"SYNTAX")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"DESCRIPTION")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/sum"}),"SUM")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Sum(value1,","[value2]","....)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Add all numbers in the arguments, which can be numbers or node references")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/average"}),"AVERAGE")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Average(value1,","[value2]","....)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the average (arithmetic mean) of its arguments, which can be numbers or node references")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/averageexzero"}),"AVERAGEEXZERO")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"AverageExZero(value1,","[value2]","....)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the average (arithmetic mean) of its arguments excluding zeros, which can be numbers or node references")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/averageexneg"}),"AVERAGEEXNEG")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"AverageExNeg(value1,","[value2]","....)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the average (arithmetic mean) of its arguments excluding negatives, which can be numbers or node references")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/averageexzeroneg"}),"AVERAGEEXZERONEG")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"AverageExZeroNeg(value1,","[value2]","....)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the average (arithmetic mean) of its arguments excluding zeros and negatives, which can be numbers or node references")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/count"}),"COUNT")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Count(value1,","[value2]","....)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Counts the number of items in a range")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/abs"}),"ABS")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"ABS(value)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the absolute value of a number, a number without its sign")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/min"}),"MIN")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Min(value1,","[value2]","....)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the smallest number in a set of values. Node references also accepted as arguments")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/max"}),"MAX")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Max(value1,","[value2]","....)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the largest number in a set of values. Node references also accepted as arguments")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/power"}),"POWER")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"POW(value,power)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the result of a number raised to a power")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/sqrt"}),"SQRT")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"SQRT(value)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the square root of a number")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/exp"}),"EXP")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"EXP(value)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns e raised to the power of a given number")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/log"}),"LOG")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"LOG(value,base)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the logarithm of a number to the base you specify")))),Object(b.b)("h2",{id:"finance-functions"},"Finance Functions"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"NAME")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"SYNTAX")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"DESCRIPTION")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/irr"}),"IRR")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"IRR (Values, ","[Guess]",")"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the internal rate of return for a series of cash flows. Node references also accepted as arguments")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/npv"}),"NPV")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"NPV (Rate, value1, ","[value2]",", ...)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the net present value of an investment based on a discount rate and a series of future payments (negative values) and income (positive values)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/pmt"}),"PMT")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"PMT(Rate, Nper, PV, ","[FV]",", ","[Type]",")"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Calculates the payment for a loan based on constant payments and a constant interest rate")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/ipmt"}),"IPMT")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"IPMT (Rate, Per, Nper, PV, ","[FV]",", ","[Type]",")"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the interest payment for a given period for an investment,based on periodic, constant payments and a constant interest rate")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/fv"}),"FV")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"FV (Rate, Nper, ","[Pmt]",", PV, ","[Type]",")"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the future value of an investment based on periodic, constant payments and a constant interest rate")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/pv"}),"PV")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"PV(Rate, Nper, ","[Pmt]",", FV, ","[Type]",")"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the present value of an investment")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/cumipmt"}),"CUMIPMT")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"CUMIPMT (Rate, Nper, PV, start_period, end_period, Type)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the cumulative interest paid between two periods")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/cmprinc"}),"CMPRINC")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"CUMPRINC (Rate, Nper, PV, start_period, end_period, Type)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the cumulative principal paid on a loan between two periods")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/rate"}),"RATE")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"RATE(Nper, PMT, PV, ","[FV]",", ","[Type]",", ","[Guess]",")"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns the interest rate per period of a loan or an investment.")))),Object(b.b)("h2",{id:"range-functions"},"Range Functions"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"NAME")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"SYNTAX")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"DESCRIPTION")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/range"}),"Range")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),".Range(start_index,end_index)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/lastnperiods"}),"LastNPeriods")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),".LastNPeriods(n)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/get"}),"Get")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),".Get(period_index)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/foreach"}),"ForEach")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"ForEach(Array,Iterator)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Iterator function")))),Object(b.b)("h2",{id:"static-identifiers-and-other-formats"},"Static Identifiers And Other Formats"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"CONSTANTS")),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("strong",{parentName:"th"},"EXPLANATION")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/this"}),"THIS")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Current Node")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/me"}),"ME")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Current Node")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/current_series"}),"CURRENT_SERIES")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Current series label")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/current_series_id"}),"CURRENT_SERIES_ID ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Current series id")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/current_series"}),"CURRENT_PERIOD_INDEX")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Current period index")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".PARENT")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Parent Node")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".CHILDREN")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Node children")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".act")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Simulated Series of the node")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".tgt ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Comparison Series of the node")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".base ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Baseline Series of the node")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".ALL_PERIODS")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns all Period values")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".SIM_PERIODS")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns simulation period values")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".act.ALL_PERIODS")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns all period values of Simulated Series,")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".tgt.ALL_PERIODS ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns all period values of Comparison Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".base.ALL_PERIODS")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns all period values of Baseline Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".act.SIM_PERIODS ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns simulation period values of Simulated Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".tgt.SIM_PERIODS ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns simulation period values of Comparison Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".base.SIM_PERIODS")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns simulation period values of Baseline Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".Range(start_index,end_index)")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected range values")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".act.Range(start_index,end_index)")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected range values of Simulated Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".base.Range(start_index,end_index)")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected range values of Comparison Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".tgt.Range(start_index,end_index)")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected range values of Baseline Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".Get(period_index) ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected period value")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".act.Get(period_index)")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected period value of Simulated Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".base.Get(period_index) ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected period value of Comparison Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".tgt.Get(period_index)")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected period value of Baseline Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".LastNPeriods(n) ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected range values")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".act.LastNPeriods(n) ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected range values of Simulated Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".base.LastNPeriods(n) ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected range values of Comparison Series")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(r.a)({parentName:"td"},{href:"../references/formulas/node-properties"}),"<NODE",">",".tgt.LastNPeriods(n) ")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Returns selected range values of Baseline Series")))))}j.isMDXComponent=!0},192:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return p}));var r=a(0),n=a.n(r);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function O(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},b=Object.keys(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(r=0;r<b.length;r++)a=b[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=n.a.createContext({}),j=function(e){var t=n.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},s=function(e){var t=j(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=Object(r.forwardRef)((function(e,t){var a=e.components,r=e.mdxType,b=e.originalType,c=e.parentName,i=O(e,["components","mdxType","originalType","parentName"]),s=j(a),u=r,p=s["".concat(c,".").concat(u)]||s[u]||o[u]||b;return a?n.a.createElement(p,l({ref:t},i,{components:a})):n.a.createElement(p,l({ref:t},i))}));function p(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var b=a.length,c=new Array(b);c[0]=u;var l={};for(var O in t)hasOwnProperty.call(t,O)&&(l[O]=t[O]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var i=2;i<b;i++)c[i]=a[i];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"},193:function(e,t,a){"use strict";var r=a(0),n=a(48);t.a=function(){return Object(r.useContext)(n.a)}},194:function(e,t,a){"use strict";a.d(t,"a",(function(){return n}));a(197);var r=a(193);function n(e){var t=(Object(r.a)().siteConfig||{}).baseUrl,a=void 0===t?"/":t;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?a+e.slice(1):a+e}},195:function(e,t,a){var r=a(66),n=a(23);e.exports=function(e,t,a){if(r(t))throw TypeError("String#"+a+" doesn't accept regex!");return String(n(e))}},196:function(e,t,a){var r=a(2)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(a){try{return t[r]=!1,!"/./"[e](t)}catch(n){}}return!0}},197:function(e,t,a){"use strict";var r=a(17),n=a(34),b=a(195),c="".startsWith;r(r.P+r.F*a(196)("startsWith"),"String",{startsWith:function(e){var t=b(this,e,"startsWith"),a=n(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return c?c.call(t,r,a):t.slice(a,a+r.length)===r}})}}]);